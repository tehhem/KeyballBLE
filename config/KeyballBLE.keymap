#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E      &kp R                        &kp T                                                                      &kp Y        &kp U  &lt 5 I    &kp O      &kp P
&mt LEFT_CONTROL A  &kp S         &kp D      &kp F                        &kp G        &mkp MCLK                       &kp TAB                       &kp H        &kp J  &kp K      &lt 5 L    &mt RIGHT_SHIFT MINUS
&mt LEFT_SHIFT Z    &kp X         &kp C      &kp V                        &kp B        &mkp LCLK                       &kp LC(UP_ARROW)              &kp N        &kp M  &mkp LCLK  &mkp RCLK  &mkp MCLK
&kp LEFT_ALT        &kp LEFT_WIN  &kp SPACE  &lt_to_layer_0 6 LANGUAGE_2  &lt 3 SPACE  &lt_to_layer_0 2 BACKSPACE      &mt RIGHT_COMMAND LANGUAGE_1  &lt 1 ENTER                               &kp SLASH
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans                &trans                &trans          &trans                          &kp F1  &kp F2   &kp F3   &kp F4   &kp F5
&trans  &trans                &trans                &trans          &kp LC(A)  &trans       &trans  &kp F6  &kp F7   &kp F8   &kp F9   &kp F10
&trans  &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))  &trans     &trans       &trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp F13
&trans  &trans                &trans                &trans          &trans     &kp DEL      &trans  &trans                             &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &trans                              &trans    &trans           &trans       &trans    &trans
&kp HOME        &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans             &trans  &mkp MB4  &kp LC(LS(TAB))  &kp LC(TAB)  &mkp MB5  &trans
&kp LEFT_SHIFT  &kp LC(LEFT)     &trans          &kp LC(RIGHT)    &trans   &kp LS(RIGHT)      &trans  &trans    &trans           &trans       &trans    &trans
&trans          &trans           &trans          &trans           &trans   &trans             &trans  &trans                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(KP_MINUS) LG(PLUS)>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp NUMBER_3     &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp BACKSLASH               &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp QUESTION       &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERIOD    &kp EQUAL                    &kp AT          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp SLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &kp COMMA       &kp PERIOD                                                                 &kp PIPE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &tog 7      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&kp Q             &kp W              &kp E  &kp R         &kp T                                       &trans  &trans  &trans  &trans  &trans
&mt LEFT_SHIFT A  &kp S              &kp D  &kp O         &kp M         &tog 7                &trans  &trans  &trans  &trans  &trans  &trans
&kp Z             &kp X              &kp C  &kp V         &kp NUMBER_3  &kp NUMBER_4          &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_1      &mt RALT NUMBER_2  &kp P  &kp LEFT_ALT  &kp SPACE     &kp LEFT_COMMAND      &trans  &trans                          &trans
            >;
        };
    };
};
